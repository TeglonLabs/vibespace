# Boltzmann Brain Multi-Cluster Configuration
# Creates multiple isolated "realities" for concurrent verification scenarios
# Each cluster represents a different Boltzmann brain scenario

# Main Control Plane Cluster - The Observer
# This cluster orchestrates and monitors all other realities
---
kind: Cluster
apiVersion: kind.x-k8s.io/v1alpha4
name: observer-reality
nodes:
  - role: control-plane
    image: kindest/node:v1.29.2
    kubeadmConfigPatches:
      - |
        kind: InitConfiguration
        nodeRegistration:
          kubeletExtraArgs:
            node-labels: "reality=observer,role=orchestrator"
    extraPortMappings:
      - containerPort: 30080  # MCP Server exposure
        hostPort: 30080
        protocol: TCP
      - containerPort: 30443  # Secure MCP
        hostPort: 30443
        protocol: TCP
  - role: worker
    image: kindest/node:v1.29.2
    kubeadmConfigPatches:
      - |
        kind: JoinConfiguration
        nodeRegistration:
          kubeletExtraArgs:
            node-labels: "reality=observer,role=monitor"
networking:
  apiServerAddress: "127.0.0.1"
  apiServerPort: 6443
  podSubnet: "10.240.0.0/16"
  serviceSubnet: "10.96.0.0/12"
  disableDefaultCNI: false

---
# Reality Alpha - Comonadic Verification Chain
kind: Cluster
apiVersion: kind.x-k8s.io/v1alpha4
name: alpha-reality
nodes:
  - role: control-plane
    image: kindest/node:v1.29.2
    kubeadmConfigPatches:
      - |
        kind: InitConfiguration
        nodeRegistration:
          kubeletExtraArgs:
            node-labels: "reality=alpha,verification=comonadic"
    extraPortMappings:
      - containerPort: 30081
        hostPort: 30081
        protocol: TCP
  - role: worker
    image: kindest/node:v1.29.2
    kubeadmConfigPatches:
      - |
        kind: JoinConfiguration
        nodeRegistration:
          kubeletExtraArgs:
            node-labels: "reality=alpha,role=ocaml-executor"
  - role: worker
    image: kindest/node:v1.29.2
    kubeadmConfigPatches:
      - |
        kind: JoinConfiguration
        nodeRegistration:
          kubeletExtraArgs:
            node-labels: "reality=alpha,role=babashka-orchestrator"
networking:
  apiServerAddress: "127.0.0.1"
  apiServerPort: 6444
  podSubnet: "10.241.0.0/16"
  serviceSubnet: "10.97.0.0/12"

---
# Reality Beta - Ternary Logic Chain
kind: Cluster
apiVersion: kind.x-k8s.io/v1alpha4
name: beta-reality
nodes:
  - role: control-plane
    image: kindest/node:v1.29.2
    kubeadmConfigPatches:
      - |
        kind: InitConfiguration
        nodeRegistration:
          kubeletExtraArgs:
            node-labels: "reality=beta,verification=ternary"
    extraPortMappings:
      - containerPort: 30082
        hostPort: 30082
        protocol: TCP
  - role: worker
    image: kindest/node:v1.29.2
    kubeadmConfigPatches:
      - |
        kind: JoinConfiguration
        nodeRegistration:
          kubeletExtraArgs:
            node-labels: "reality=beta,role=tree-sitter-parser"
  - role: worker
    image: kindest/node:v1.29.2
    kubeadmConfigPatches:
      - |
        kind: JoinConfiguration
        nodeRegistration:
          kubeletExtraArgs:
            node-labels: "reality=beta,role=codex-verifier"
networking:
  apiServerAddress: "127.0.0.1"
  apiServerPort: 6445
  podSubnet: "10.242.0.0/16"
  serviceSubnet: "10.98.0.0/12"

---
# Reality Gamma - Circular Verification Loop
kind: Cluster
apiVersion: kind.x-k8s.io/v1alpha4
name: gamma-reality
nodes:
  - role: control-plane
    image: kindest/node:v1.29.2
    kubeadmConfigPatches:
      - |
        kind: InitConfiguration
        nodeRegistration:
          kubeletExtraArgs:
            node-labels: "reality=gamma,verification=circular"
    extraPortMappings:
      - containerPort: 30083
        hostPort: 30083
        protocol: TCP
  - role: worker
    image: kindest/node:v1.29.2
    kubeadmConfigPatches:
      - |
        kind: JoinConfiguration
        nodeRegistration:
          kubeletExtraArgs:
            node-labels: "reality=gamma,role=kuzu-graph"
  - role: worker
    image: kindest/node:v1.29.2
    kubeadmConfigPatches:
      - |
        kind: JoinConfiguration
        nodeRegistration:
          kubeletExtraArgs:
            node-labels: "reality=gamma,role=elevenlabs-audio"
  - role: worker
    image: kindest/node:v1.29.2
    kubeadmConfigPatches:
      - |
        kind: JoinConfiguration
        nodeRegistration:
          kubeletExtraArgs:
            node-labels: "reality=gamma,role=web9-validator"
networking:
  apiServerAddress: "127.0.0.1"
  apiServerPort: 6446
  podSubnet: "10.243.0.0/16"
  serviceSubnet: "10.99.0.0/12"

---
# Reality Delta - High Concurrency Stress Test
kind: Cluster
apiVersion: kind.x-k8s.io/v1alpha4
name: delta-reality
nodes:
  - role: control-plane
    image: kindest/node:v1.29.2
    kubeadmConfigPatches:
      - |
        kind: InitConfiguration
        nodeRegistration:
          kubeletExtraArgs:
            node-labels: "reality=delta,verification=stress"
    extraPortMappings:
      - containerPort: 30084
        hostPort: 30084
        protocol: TCP
  - role: worker
    image: kindest/node:v1.29.2
    kubeadmConfigPatches:
      - |
        kind: JoinConfiguration
        nodeRegistration:
          kubeletExtraArgs:
            node-labels: "reality=delta,role=load-generator-1"
  - role: worker
    image: kindest/node:v1.29.2
    kubeadmConfigPatches:
      - |
        kind: JoinConfiguration
        nodeRegistration:
          kubeletExtraArgs:
            node-labels: "reality=delta,role=load-generator-2"
  - role: worker
    image: kindest/node:v1.29.2
    kubeadmConfigPatches:
      - |
        kind: JoinConfiguration
        nodeRegistration:
          kubeletExtraArgs:
            node-labels: "reality=delta,role=metrics-collector"
networking:
  apiServerAddress: "127.0.0.1"
  apiServerPort: 6447
  podSubnet: "10.244.0.0/16"
  serviceSubnet: "10.100.0.0/12"
